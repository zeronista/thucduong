spring:
  application:
    name: thucduong-ecommerce

  # Data Configuration
  data:
    mongodb:
      uri: mongodb://localhost:27017/thucduong
      database: thucduong
      auto-index-creation: true
    # Redis Configuration for caching
    redis:
      host: localhost
      port: 6379
      password:
      timeout: 2000ms
      client-type: jedis
      jedis:
        pool:
          max-active: 10
          max-idle: 8
          min-idle: 2
          max-wait: -1ms

  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 3600000 # 1 hour default
      cache-null-values: false
      use-key-prefix: true
      key-prefix: "thucduong:"

  # Security Configuration
  security:
    jwt:
      secret: ${JWT_SECRET:your-256-bit-secret-key-for-jwt-token-generation-change-in-production}
      expiration: 86400000 # 24 hours
      refresh-token-expiration: 604800000 # 7 days

  # Mail Configuration
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          connectiontimeout: 5000
          timeout: 3000
          writetimeout: 5000

  # File Upload Configuration
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 25MB
      enabled: true

  # Jackson Configuration
  jackson:
    serialization:
      write-dates-as-timestamps: false
    time-zone: Asia/Ho_Chi_Minh
    date-format: yyyy-MM-dd HH:mm:ss

# Server Configuration
server:
  port: 8080
  servlet:
    context-path: /api
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Logging Configuration
logging:
  level:
    com.nepnhaxua.thucduong: DEBUG
    org.springframework.data.mongodb: DEBUG
    org.springframework.security: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/thucduong.log
    max-size: 10MB
    max-history: 30

# Application Configuration
app:
  name: Thực Dưỡng E-Commerce
  version: 1.0.0

  # CORS Configuration
  cors:
    allowed-origins:
      - http://localhost:3000
      - http://localhost:8080
    allowed-methods:
      - GET
      - POST
      - PUT
      - DELETE
      - OPTIONS
    allowed-headers:
      - "*"
    exposed-headers:
      - Authorization
      - X-Total-Count
    allow-credentials: true
    max-age: 3600

  # Pagination defaults
  pagination:
    default-page-size: 20
    max-page-size: 100

  # File storage
  storage:
    upload-dir: ./uploads
    allowed-extensions:
      images: jpg,jpeg,png,gif,webp
      documents: pdf,doc,docx,xls,xlsx
    max-size:
      images: 5242880 # 5MB
      documents: 10485760 # 10MB

  # Security settings
  security:
    password-encoder: bcrypt
    strength: 10
    remember-me-key: ${REMEMBER_ME_KEY:unique-and-secret-key}

  # Rate limiting
  rate-limiting:
    enabled: true
    default-limit: 1000
    window-minutes: 15

  # API Documentation
  api-docs:
    enabled: true
    path: /api-docs
    swagger-ui:
      path: /swagger-ui.html

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  prometheus:
    metrics:
      export:
        enabled: true

# MongoDB Indexes to create on startup
mongodb:
  indexes:
    create-on-startup: true
    drop-indexes-on-startup: false

# Environment specific configurations
---
spring:
  config:
    activate:
      on-profile: development

logging:
  level:
    com.nepnhaxua.thucduong: TRACE

---
spring:
  config:
    activate:
      on-profile: production
  data:
    mongodb:
      uri: ${MONGODB_URI}
    redis:
      host: ${REDIS_HOST}
      password: ${REDIS_PASSWORD}

logging:
  level:
    com.nepnhaxua.thucduong: INFO

server:
  port: ${PORT:8080}
